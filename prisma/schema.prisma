generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model GlobalCategories {
  globalCategoryId     Int                    @id @default(autoincrement())
  code                 String                 @unique
  name                 String
  description          String?
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  restaurantCategories RestaurantCategories[]

  @@index([code])
}

model RestaurantCategories {
  categoryId       Int               @id @default(autoincrement())
  restId           Int
  categorySlug     String
  displayName      String
  globalCategoryId Int?
  displayOrder     Int               @default(0)
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  menuItems        MenuItems[]
  globalCategory   GlobalCategories? @relation(fields: [globalCategoryId], references: [globalCategoryId])

  @@unique([restId, categorySlug])
  @@index([restId, categorySlug])
  @@index([globalCategoryId])
}

model MenuItems {
  itemId               Int                  @id @default(autoincrement())
  itemName             String               @unique
  restId               Int
  itemPrice            Decimal              @db.Decimal(10, 2)
  itemDescription      String
  itemSweet            Boolean              @default(false)
  itemSpicy            Boolean              @default(false)
  itemSpiceLevel       Int                  @default(0)
  itemAvailable        Boolean              @default(true)
  itemBestSeller       Boolean              @default(false)
  itemIsVeg            Boolean              @default(false)
  itemthumbnail        String               @default("/DummyDishImage.jpg")
  itemIngredients      String
  restaurantCategoryId Int
  categorySlug         String
  globalCategoryId     Int?
  categoryDisplayName  String
  images               ItemImages[]
  category             RestaurantCategories @relation(fields: [restaurantCategoryId], references: [categoryId])

  @@index([restId])
  @@index([restaurantCategoryId])
  @@index([categorySlug])
  @@index([globalCategoryId])
}

model ItemImages {
  imageId    Int       @id @default(autoincrement())
  imageUrl   String
  menuItemId Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  menuItem   MenuItems @relation(fields: [menuItemId], references: [itemId])

  @@index([menuItemId])
}

model User {
  userId       Int       @id @default(autoincrement())
  userName     String
  userMobile   String    @unique
  isRestOwner  Boolean   @default(false)
  userLocation String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  lastLoginAt  DateTime?

  @@index([userMobile])
}
